package {{.PackageName}}

import (
	"context"

	"github.com/stefanprifti/gqlclient"
)

type Client struct {
	URL       string
	gqlclient *gqlclient.Client
}

func NewClient(url string) *Client {
	return &Client{
		URL: url,
		gqlclient: gqlclient.New(gqlclient.Options{
			Endpoint: url,
		}),
	}
}

{{range .Methods}}func (c *Client) {{.Name}}(ctx context.Context, req *{{.Request}}) (*{{.Response}}, error) {
	var resp {{.Response}}

	query := `{{.Query}}`

	{{if eq .Type "query"}}err := c.gqlclient.Query(ctx, query, req, &resp){{else}}err := c.gqlclient.Mutation(ctx, query, req, &resp){{end}}
	if err != nil {
		return nil, err
	}

	return &resp, nil
}
{{end}}